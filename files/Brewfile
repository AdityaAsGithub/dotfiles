# file location: ${HOME}/Brewfile

# This file is used along with the `brew bundle` command to ensure that required packages and apps are installed.
# Also can be used to ensure that any package/apps that were installed as experimentation are uninstalled from the system.
# For a more detailed explanation of the philosophy/reasoning behind this file, please see https://openfolder.sh/macos-migrations-with-brewfile

# These are the common shell aliases that I have setup in the `${HOME}/.aliases` file for ease of running/typing (and also don't need to remember all these commands by-heart!). If you are using my `${HOME}/.aliases`, they will already be present for you. If not, you can then set these up in the respective dotfile of your choice
# alias bcg='brew outdated --greedy'  # List all casks that are outdated like a "dry-run" (and which have version marked as 'latest')
# alias bcug='brew upgrade --greedy'  # Upgrades all casks that are outdated (and which have version marked as 'latest')
# alias bupc='brew bundle check || brew bundle --all --cleanup; brew bundle cleanup -f; brew cleanup --prune=all; brew autoremove; brew upgrade'        # Upgrades and cleans up all regular outdated casks and libs (non-greedy)

# TODO: Need to find cask for:
#   Tinkertool
#   ZoomHider

# set global preferences for all 'brew install' commands
cask_args appdir: '/Applications', no_quarantine: true

# java_present = system('/usr/libexec/java_home --failfast')
is_arm = Hardware::CPU.arm?

tap 'arthurk/virt-manager'
tap 'homebrew/services'
tap 'romkatv/powerlevel10k'

brew 'adwaita-icon-theme'
brew 'aom'
brew 'at-spi2-core'
brew 'bash'
brew 'bat'
brew 'btop'
brew 'cairo'
brew 'curl'
brew 'diff-so-fancy'
brew 'direnv'
brew 'eza'
brew 'ffmpeg'
brew 'fontconfig'
brew 'gcc'
brew 'gdk-pixbuf'
brew 'git-extras'
brew 'git-gui'
brew 'git-tools'
brew 'git'
brew 'git'
brew 'glib-networking'
brew 'glib'
brew 'gnutls'
brew 'gobject-introspection'
brew 'graphene'
brew 'gsettings-desktop-schemas'
brew 'gstreamer'
brew 'gtk+3'
brew 'gtksourceview4'
brew 'guile'
brew 'harfbuzz'
brew 'jpeg-xl'
brew 'jq'
brew 'json-glib'
brew 'leptonica'
brew 'less'
brew 'libass'
brew 'libbluray'
brew 'libidn2'
brew 'libnice'
brew 'libosinfo'
brew 'librsvg'
brew 'libslirp'
brew 'libsoup'
brew 'libsoup@2'
brew 'libtiff'
brew 'libusb'
brew 'libvirt', restart_service: true
brew 'libxml2'
brew 'little-cms2'
brew 'mise'
brew 'moreutils'
brew 'ncdu'
brew 'ninja'
brew 'numpy'
brew 'open-ocd'
brew 'openblas'
brew 'pango'
brew 'powerlevel10k'
brew 'prettyping'
brew 'py3cairo'
brew 'pygobject3'
brew 'pyqt@5'
brew 'qemu'
brew 'qt@5'
brew 'ripgrep'
brew 'spice-gtk'
brew 'stlink'
brew 'syncthing'
brew 'tesseract'
brew 'unbound'
brew 'usbredir'
brew 'vte3'
brew 'webp'
brew 'zsh'

# ----------------------------------------------------------------------------------------------------------
# brew 'mas'
# mas 'iBar-Menubar icon control tool', id: 6443843900
# mas 'Command X', id: 6448461551

# ----------------------------------------------------------------------------------------------------------
cask 'aldente'
cask 'clocker'
cask 'cmake'
cask 'discord'
cask 'fig'
cask 'firefox@nightly'
cask 'font-meslo-lg-nerd-font'
cask 'google-chrome'
cask 'iterm2'
cask 'itsycal'
cask 'intellij-idea'
cask 'keepassxc'
cask 'keepingyouawakeo'
cask 'keybase'
cask 'microsoft-outlook'
cask 'minecraft'
cask 'parallels'
cask 'rancher'
cask 'raycast'
cask 'slack'
cask 'spotify'
cask 'stats'
cask 'visual-studio-code'
cask 'webex-meetings'
cask 'wireshark'
cask 'zoom'

# VSCode extensions
# Note: I don't want brew to silently install VS Code (which is what it does currently if the following lines are present but it doesn't find code!)
is_vscode_installed = !`which code`.chomp.empty?
if is_vscode_installed
  vscode 'brandonkirbyson.vscode-animations'
  vscode 'britesnow.vscode-toggle-quotes'
  vscode 'britesnow.vscode-toggle-quotes'
  vscode 'cschlosser.doxdocgen'
  vscode 'dan-c-underwood.arm'
  vscode 'daohong-emilio.yash'
  vscode 'eamodio.gitlens'
  vscode 'eamodio.gitlens'
  vscode 'editorconfig.editorconfig'
  vscode 'esbenp.prettier-vscode'
  vscode 'github.classroom'
  vscode 'github.vscode-pull-request-github'
  vscode 'ibm.output-colorizer'
  vscode 'jeff-hykin.better-cpp-syntax'
  vscode 'marus25.cortex-debug'
  vscode 'mcu-debug.debug-tracker-vscode'
  vscode 'mcu-debug.memory-view'
  vscode 'mcu-debug.peripheral-viewer'
  vscode 'mcu-debug.rtos-views'
  vscode 'mechatroner.rainbow-csv'
  vscode 'mikestead.dotenv'
  vscode 'mkhl.direnv'
  vscode 'ms-azuretools.vscode-docker'
  vscode 'ms-python.debugpy'
  vscode 'ms-python.isort'
  vscode 'ms-python.python'
  vscode 'ms-python.vscode-pylance'
  vscode 'ms-toolsai.jupyter-keymap'
  vscode 'ms-toolsai.jupyter-renderers'
  vscode 'ms-toolsai.jupyter'
  vscode 'ms-toolsai.vscode-jupyter-cell-tags'
  vscode 'ms-toolsai.vscode-jupyter-slideshow'
  vscode 'ms-vscode-remote.remote-containers'
  vscode 'ms-vscode-remote.remote-ssh-edit'
  vscode 'ms-vscode-remote.remote-ssh'
  vscode 'ms-vscode-remote.remote-wsl'
  vscode 'ms-vscode.cmake-tools'
  vscode 'ms-vscode.cpptools-extension-pack'
  vscode 'ms-vscode.cpptools-themes'
  vscode 'ms-vscode.cpptools'
  vscode 'ms-vscode.remote-explorer'
  vscode 'ms-vscode.vscode-serial-monitor'
  vscode 'oderwat.indent-rainbow'
  vscode 'shan.code-settings-sync'
  vscode 'ritwickdey.liveserver'
  vscode 'scala-lang.scala'
  vscode 'scalameta.metals'
  vscode 'twxs.cmake'
  vscode 'tyriar.sort-lines'
  vscode 'vscode-icons-team.vscode-icons'
  vscode 'wayou.vscode-todo-highlight'
  vscode 'wayou.vscode-todo-highlight'
  vscode 'withfig.fig'
  vscode 'wmaurer.change-case'
  vscode 'zixuanwang.linkerscript'
end

# ----------------------------------------------------------------------------------------------------------
# TODO: This doesn't solve the issue about performing a custom action when a specific formula/cask is (re)installed - keeping for future reference
at_exit do
  # This is required for completions from other plugins to work (for eg git-extras)
  system("rm -rfv \"$HOMEBREW_REPOSITORY/share/zsh/site-functions/_git\"") || true
end

# ----------------------------------------------------------------------------------------------------------
# Moved these brew and cask lines to clean up the noise from the above alphabetically sorted lists

# ---- docker utilities
# brew 'dive'   # docker layers inspection on steroids
# brew 'docker-diff'
# brew 'docker-slim'  # TODO: investigate if the http-probe is a deal-breaker
# brew 'hadolint'     # lint Dockerfiles (similar to shellcheck for shell scripts)
# brew 'kubernetes-cli', link: true   # Note: Had to do this: rm /usr/local/bin/kubectl && brew link --overwrite kubernetes-cli
# brew 'kubernetes-helm'

# ---- command-line utilities
# brew 'fzy'

# ---- git utilities
# brew 'git-crypt'

# ---- tmux utilities
# brew 'tmux'
# brew 'reattach-to-user-namespace' # Needed if using tmux (to be able to access the macos clipboard from within tmux)

# ---- general utilities
# brew 'gradle'
# brew 'gradle-completion'
# brew 'libressl', link: true
# brew 'localstack'
# brew 'speedtest-cli'

# https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git
# cask 'git-credential-manager'

# ---- casks
# cask 'dbeaver-community'
# cask 'intellij-idea-ce'
# cask 'kdiff3'
# cask 'keycastr'
# cask 'licecap'
# cask 'lulu'
# cask 'netspot'
# cask 'ngrok'
# cask 'onyx'  # Commented out since I'm on the beta version of macos
# cask 'tempbox'
